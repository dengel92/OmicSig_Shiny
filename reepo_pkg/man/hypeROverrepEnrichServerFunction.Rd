% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hypeR.R
\name{hypeROverrepEnrichServerFunction}
\alias{hypeROverrepEnrichServerFunction}
\title{hypeROverrepEnrichServerFunction()}
\usage{
hypeROverrepEnrichServerFunction(
  signatureDF,
  gsetNames = NULL,
  gsetList = NULL,
  gsetListCategory = "customize",
  gsetListSubCategory = "customize",
  test = NULL
)
}
\arguments{
\item{signatureDF}{A dataframe or character contains signature information. A dataframe with columns "symbol" or "symbol" and "direction", or a character. No score (weight) for each feature is needed for over-representative test.}

\item{gsetNames}{required by hypeROverrepEnrichFunction()}

\item{gsetList}{required by hypeROverrepEnrichFunction()}

\item{gsetListCategory}{required by hypeROverrepEnrichFunction(); need this to rbind result from msigDB gset and customize gset.}

\item{gsetListSubCategory}{required by hypeROverrepEnrichFunction(); need this to rbind result from msigDB gset and customize gset.}

\item{test}{required by hypeROverrepEnrichFunction()}
}
\value{
A list with two objects. $overrep is a data.frame of over-representation analysis result. $signature is the input signature features, used for display signature in Shiny interface.
}
\description{
based on hypeROverrepEnrichFunction(). most of this function is dealing with signature directions.
input signature table with score, if needed, and direction,
output a list to better processed in RShiny Server.
this function allows input BOTH msigdb gsets (a df with names) as gsetNames,
and a customized gset list (a list) as gsetList, since hypeROverrepEnrichFunction() allows this.
but as for 04/2020, in real RShiny Server SigRepo, the two situations are run independently.
last updated 04/21/2020 by vmli
}
\examples{

signatureDF <- data.frame(cbind(c("AOC1", "LAP3", "FUCA2", "HS3ST1", "LAS1L", "BAD", "WNT16", "FGR", "CFTR", "NFYA"),
                                 c(rep("+", 5),rep("-", 5))))
colnames(signatureDF) <- c("signature_symbol", "signature_direction")
signatureDF$signature_symbol <- as.character(signatureDF$signature_symbol)
gsetNames <- data.frame(species = "Homo sapiens",
category = c("C2", "C4"),
subcategory = c("CP:KEGG", "CGN"))
overrep_result <- hypeROverrepEnrichServerFunction(signatureDF, gsetNames)
overrep_result$overrep


}
